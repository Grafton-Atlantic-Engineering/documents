  We will be writing a program that generates a 24 character transaction ID that is alpha numeric. This transaction ID must be generated using true randomness and not pseudo randomness. This transaction ID can contain digits 0-9 and both upper case and lower case letters but cannot contain any special characters. We are writing this program to replace their current transaction ID generator that only generates a 10 digit ID and is not truly random. This will be put into an already existing program and it will not necessarily be used by a physical user. This transaction ID will be assigned to a user once they log in and it will be carried with them throughout the session. The session ID will be part of the structure and the transaction ID won’t be part of the session ID but it will be associated with it. Once the user logs out the transaction ID will be not be associated with the user anymore. This transaction ID generator will be used for web transactions, ATM transactions, etc. This program will also be part of a tomcat server. Each time a user logs in they are assigned a new transaction ID. Therefore, this transaction ID will not be needed to be stored in a database or file because it will be generated each time. This program will be fed a CSV file which contains a customer’s alpha numeric account number, first name, last name, street address, city, state, zip code, and company. The client’s database is very good, so we don’t have to worry about having something like an address in a name spot. However, there is null data which is invalid input so we need to make sure our program can handle data that is null or empty strings (however, we still need to ask the client what fields are required and what fields are okay to be null and still create a transaction ID). There are customers all over the world as well, so they’re not just in the US. This program will be given around 15-115 customers per second. 
	
  The goal of this program is to better serve our client’s customers by creating a truly randomized transaction ID because the old transaction ID was not truly random and had personal information of the customer in it. The highest objective of this program is to not crash, so we need to make sure that if there is any incorrect data in the data stream our program recovers from that. The client wants this program to run as fast as possible as well. There is no encryption standard. The client would also like the code to be commented so the software engineers on his team can understand our code better. It is also important that no information about the customer or transaction is exposed. 

